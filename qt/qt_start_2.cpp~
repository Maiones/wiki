#include <QApplication>
#include <QPushButton>
#include <QProcess>
#include <QMessageBox>
#include <QVBoxLayout>
#include <QWidget>
#include <QLabel>

class MainWindow : public QWidget {
    Q_OBJECT

public:
    MainWindow() {
        // Устанавливаем название окна
        setWindowTitle("Command Output");

        // Создаем кнопку и метку для вывода текста
        button = new QPushButton("!!!!Click!!!", this);
        label = new QLabel("Output will appear here", this);

        // Создаем вертикальный layout
        QVBoxLayout *layout = new QVBoxLayout;
        layout->addWidget(button);
        layout->addWidget(label);
        setLayout(layout);
        resize(400, 200);

        // Подключаем клик по кнопке к слоту
        connect(button, SIGNAL(clicked()), this, SLOT(runCommand()));
    }

public slots:
    void runCommand() {
        QProcess p;
        p.start("sudo x11vnc -showrfbauth /root/.vnc/passwd | awk '/pass: / {print $3}'");
        p.waitForFinished(-1);

        QString p_stdout = p.readAllStandardOutput();
        QString p_stderr = p.readAllStandardError();

        // Проверяем ошибки и выводим результат
        if (!p_stderr.isEmpty()) {
            QMessageBox::critical(this, "Error", "Command failed: " + p_stderr);
        } else {
            label->setText("Command Output: " + p_stdout);
        }
    }

private:
    QPushButton *button;
    QLabel *label;
};

int main(int argc, char *argv[]) {
    QApplication app(argc, argv);

    MainWindow window;
    window.show();

    return app.exec();
}

#include "main.moc"

